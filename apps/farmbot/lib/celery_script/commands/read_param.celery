@doc """
  Read Param
    args: %{},
    body: [string | atom]
"""
@spec read_param(%{}, [String.t | atom | integer]) :: :ok | {:error, atom}
def read_param(%{}, [param_str])
  when is_atom(param_str) or is_bitstring(param_str)
do
  param_str |> GcodeParser.parse_param |> do_read_param
end

def read_param(%{}, [param_int]) when is_integer(param_int) do
  do_read_param(param_int)
end

@spec do_read_param(integer, integer, atom) :: :ok | {:error, atom}
defp do_read_param(param_int, retries \\ 0, err \\ nil)
defp do_read_param(param_int, retries, _)
  when is_integer(param_int) and retries < 4
do
  case GcodeHandler.block_send("F21 P#{param_int}") do
     :done -> :ok
     error -> do_read_param(param_int, retries + 1, error)
  end
end

defp do_read_param(_,_,err), do: {:error, err}
